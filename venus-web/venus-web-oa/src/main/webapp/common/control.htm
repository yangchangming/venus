<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>VENUS组织权限系统</title>
</head>
<body leftmargin="0" topmargin="0" style="margin:0px;">
<table width="14" height="100%"  border="0" style="background-repeat:repeat-y"  cellpadding="0" cellspacing="0" background="../images/index/but_difbg.gif" >
  <tr>
    <td height="28" valign="top" align="left">
	   <div id="Layer012" style="position:absolute; width:12px; height:115px; z-index:0; layer-background-color: #00FF00; border: 0px none #000000;">    
	    <img src="../images/index/but_01.gif" title = "隐藏菜单" width="12" height="38" showImage1="../images/index/but_01.gif" showImage2="../images/index/but_01_0.gif" hiddImage1="../images/index/but_02.gif" hiddImage2="../images/index/but_02_0.gif" onMouseOver="doMouseOverImg(event)" onMouseOut="doMouseOutImg(event)" status1="show" style="cursor:pointer" onClick="hiddenFuncTree(event)" name="Image26" width="12" height="45" border="0">
	   </div>
   </td>
  </tr>
  <tr>
  <td valign="top"><!--<img src="../images/index/but_dif.gif" width="24">  --></td>
  </tr>
</table>
</body>
</html>
<script language="javascript"> 
	var hiddenHandler = new HiddenHandler(60,15,175);
	var thisParentFrame = parent.document.getElementById("subMainFrameSet");
	function hiddenFuncTree(event) {
		var thisObj = event.srcElement?event.srcElement:event.target;
		var thisFuncTree = parent;
		if(thisObj.getAttribute("status1") == "show") {
			//thisFuncTree.subMainFrameSet.cols='0,25,*';
			hiddenHandler.hidden();
			thisObj.setAttribute("status1","hidden") ;
			thisObj.src = thisObj.getAttribute("hiddImage1");
			thisObj.title = "显示菜单";
		} else if(thisObj.getAttribute("status1") == "hidden") {
			//thisFuncTree.subMainFrameSet.cols='200,25,*';
			hiddenHandler.show();
			thisObj.setAttribute("status1","show") ;
			thisObj.src = thisObj.getAttribute("showImage1");
			thisObj.title = "隐藏菜单";
		}	
	}
	
	function doMouseOverImg(event) {
		var thisObj = event.srcElement?event.srcElement:event.target;
		if(thisObj.getAttribute("status1") == "show") {
				thisObj.src = thisObj.getAttribute("showImage2");
		} else if(thisObj.getAttribute("status1") == "hidden") {
				thisObj.src = thisObj.getAttribute("hiddImage2");
		}
	}
	
	function doMouseOutImg(event) {
		var thisObj = event.srcElement?event.srcElement:event.target;
		if(thisObj.getAttribute("status1") == "show") {
				thisObj.src = thisObj.getAttribute("showImage1");
		} else if(thisObj.getAttribute("status1") == "hidden") {
				thisObj.src = thisObj.getAttribute("hiddImage1");
		}
	}
	
	function HiddenHandler(totalTime, minTime, totalWidth) {
		this.totalTime = totalTime;
		this.totalWidth = totalWidth;
		this.minTime = minTime;
		this.currentWidth = 0;
		this.currentTime = 0;
		this.isInit = false;
		this.getWidth = function() {
			var difWidth = this.totalWidth * (this.minTime / this.totalTime);
			return difWidth;
		}
		
		this.hidden = function() {
			if(this.currentWidth <= 0 && !this.isInit) {
				this.currentWidth = this.totalWidth;
				this.isInit = true;
			}
			
			if(this.currentWidth > 0) {
				setTimeout("hiddenHandler.hidden()", this.minTime);				
			}
			var thisWidth = this.currentWidth - this.getWidth();
			if(thisWidth <= 0) {
					thisWidth = 0;
			}
			doHiddenInstance(thisWidth);
			this.currentWidth = thisWidth;
		}
		
		this.show = function() {
			if(this.currentWidth >= totalWidth && !this.isInit) {
				this.currentWidth = 0;
				this.isInit = true;
			}
			if(this.currentWidth < this.totalWidth) {
				setTimeout("hiddenHandler.show()", this.minTime);				
			}
			var thisWidth = this.currentWidth + this.getWidth();
			if(thisWidth >= this.totalWidth) {
					thisWidth = this.totalWidth;
			}
			doHiddenInstance(thisWidth);
			this.currentWidth = thisWidth;
		}
		
	}
	
	function doHiddenInstance(width) {
			thisParentFrame.cols = width + ",12,*";
	}
	

</script>
