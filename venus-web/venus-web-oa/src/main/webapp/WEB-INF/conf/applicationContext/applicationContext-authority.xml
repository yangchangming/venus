<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"
         default-lazy-init="true">

	<!--SQL构建组织权限扩展-->
	<!--<bean id="historyLogOrgPrivilege" class="venus.oa.util.sql.OrgPrivilege"  scope="prototype"/>-->

	<!-- 密码工具类 -->
    <bean id="Encode" class="venus.pub.util.Encode"/>

    <!-- 登陆日志AOP 开始 -->
    <!-- 创建通知 -->
    <bean id="loginLogAdvice" class="venus.oa.aop.AuthorityAdvice" >
        <property name="notifyManager">
           <value>BlackListNotifyManager</value>
        </property>
        <property name="position">
            <value>2</value><!-- 1-前通知，2-后通知，3-环绕通知 -->
        </property>
    </bean>
    <!-- 自动代理 -->
    <bean id="loginLogAop" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>ILoginLogBs_target</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>loginLogAdvisor</value>
            </list>
        </property>
    </bean>
    <!-- 定义切入点 -->
    <bean id="loginLogAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice"><ref local="loginLogAdvice"/></property>
        <property name="mappedNames">
            <list>
                <value>insert</value>
            </list>
        </property>
    </bean>
    <!-- 登陆日志AOP 结束 -->

    <!-- 业务通知组件 -->
    <bean id="BlackListNotifyManager" class="venus.oa.notify.impl.AuNofifyManager" >
        <property name="auNotifies">
            <list>
                <value>logNotifyDecorator</value>
                <!--<value>blackListNotifyDecorator</value>-->
            </list>
        </property>
    </bean>

    <!-- 通知组件示例：日志方式记录 -->
    <bean id="logNotifyDecorator" class="venus.oa.notify.AuLogNotifyDecorator"/>
    <!-- 通知组件：加入黑名单 -->
    <!--<bean id="blackListNotifyDecorator" class="venus.authority.service.blacklist.model.notify.AddBlackListNotifyDecorator"/>-->

	<!-- 业务通知组件 结束 -->


    <!-- 系统配置项AOP 开始 -->
    <!-- 创建通知 -->
    <bean id="SysParameterAdvice" class="venus.oa.aop.AuthorityAdvice">
        <property name="notifyManager">
           <value>SysParameterNotifyManager</value>
        </property>
        <property name="position">
            <value>2</value><!-- 1-前通知，2-后通知，3-环绕通知 -->
        </property>
    </bean>

    <!-- 自动代理 -->
    <bean id="SysParameterAop" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>sysparams_bs</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>SysParameterAdvisor</value>
            </list>
        </property>
    </bean>


    <!-- 定义切入点 -->
    <bean id="SysParameterAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice"><ref local="SysParameterAdvice"/></property>
        <property name="mappedNames">
            <list>
                <value>update</value>
                <value>delete</value>
            </list>
        </property>
    </bean>
    <!-- 登陆日志AOP 结束 -->

    <!-- 业务通知组件 -->
    <bean id="SysParameterNotifyManager" class="venus.oa.notify.impl.AuNofifyManager">
        <property name="auNotifies">
            <list>
                <value>pwdLifeCycleNotifyDecorator</value>
            </list>
        </property>
    </bean>


	<!-- 通知组件：禁用PWDLIFECYCLE后撤销过期时间 -->
    <bean id="pwdLifeCycleNotifyDecorator" class="venus.oa.notify.PwdLifeCycleNotifyDecorator"/>
	<!-- 系统配置项AOP 结束 -->

	<!-- 组织权限黑名单删除AOP 开始 -->
    <!-- 创建通知 -->
    <bean id="auLoginLogAdvice" class="venus.oa.aop.AuthorityAdvice" >
        <property name="notifyManager">
           <value>auLoginLogNotifyManager</value>
        </property>
        <property name="position">
            <value>1</value><!-- 1-前通知，2-后通知，3-环绕通知 -->
        </property>
    </bean>

    <!-- 自动代理 -->
    <bean id="auLoginLogAop" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>blackListBs_target</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>auLoginLogAdvisor</value>
            </list>
        </property>
    </bean>

    <!-- 定义切入点 -->
    <bean id="auLoginLogAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice"><ref local="auLoginLogAdvice"/></property>
        <property name="mappedNames">
            <list>
                <value>delete</value>
            </list>
        </property>
    </bean>
    <!-- 组织权限黑名单删除AOP 结束 -->

    <!-- 业务通知组件 -->
    <bean id="auLoginLogNotifyManager" class="venus.oa.notify.impl.AuNofifyManager">
        <property name="auNotifies">
            <list>
                <!--<value>removeBlackListNotifyDecorator</value>-->
            </list>
        </property>
    </bean>

	<!-- 通知组件：加入黑名单 -->
    <!--<bean id="removeBlackListNotifyDecorator" class="venus.authority.service.blacklist.model.notify.RemoveBlackListNotifyDecorator"/>-->
    <!-- 业务通知组件 结束 -->

</beans>